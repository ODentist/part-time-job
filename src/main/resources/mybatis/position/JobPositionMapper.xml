<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.parttime.project.job.position.mapper.JobPositionMapper">
    
    <resultMap type="JobPosition" id="JobPositionResult">
        <result property="positionId"    column="position_id"    />
        <result property="userId"    column="user_id"    />
        <result property="positionName"    column="position_name"    />
        <result property="positionType"    column="position_type"    />
        <result property="area"    column="area"    />
        <result property="positionSalary"    column="position_salary"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deliveryStatus"    column="deliveryStatus"    />
    </resultMap>

    <sql id="selectJobPositionVo">
        select a.position_id, a.user_id, a.position_name, a.position_type, a.area, a.position_salary, a.status, a.create_time, a.update_time,b.name from job_position a
        join job_enterprise b on a.user_id = b.user_id
    </sql>

    <select id="selectJobPositionList" parameterType="JobPosition" resultMap="JobPositionResult">
        <include refid="selectJobPositionVo"/>
        <where>  
            <if test="userId != null "> and a.user_id = #{userId}</if>
            <if test="positionName != null  and positionName != ''"> and a.position_name like concat('%', #{positionName}, '%')</if>
            <if test="positionType != null "> and a.position_type = #{positionType}</if>
            <if test="area != null  and area != ''"> and a.area = #{area}</if>
            <if test="positionSalary != null "> and a.position_salary = #{positionSalary}</if>
            <if test="status != null "> and a.status = #{status}</if>
        </where>
    </select>

    <select id="selectJobPositionDeliveryList" parameterType="JobPosition" resultMap="JobPositionResult">
        select a.position_id, a.user_id, a.position_name, a.position_type, a.area, a.position_salary, a.status, a.create_time, a.update_time,
        (SELECT COUNT(1) from job_apply_detail where user_id = #{userId} and a.position_id = position_id) deliveryStatus,b.id enterpriseId, b.name from job_position a
        JOIN job_enterprise b ON a.user_id = b.user_id
        <where>
            <if test="positionName != null  and positionName != ''"> and position_name like concat('%', #{positionName}, '%')</if>
            <if test="positionType != null "> and position_type = #{positionType}</if>
            <if test="area != null  and area != ''"> and area = #{area}</if>
            <if test="positionSalary != null "> and position_salary = #{positionSalary}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectJobPositionById" parameterType="Long" resultMap="JobPositionResult">
        <include refid="selectJobPositionVo"/>
        where position_id = #{positionId}
    </select>
        
    <insert id="insertJobPosition" parameterType="JobPosition">
        insert into job_position
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="positionId != null ">position_id,</if>
            <if test="userId != null ">user_id,</if>
            <if test="positionName != null  and positionName != ''">position_name,</if>
            <if test="positionType != null ">position_type,</if>
            <if test="area != null  and area != ''">area,</if>
            <if test="positionSalary != null ">position_salary,</if>
            <if test="status != null ">status,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="positionId != null ">#{positionId},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="positionName != null  and positionName != ''">#{positionName},</if>
            <if test="positionType != null ">#{positionType},</if>
            <if test="area != null  and area != ''">#{area},</if>
            <if test="positionSalary != null ">#{positionSalary},</if>
            <if test="status != null ">#{status},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateJobPosition" parameterType="JobPosition">
        update job_position
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="positionName != null  and positionName != ''">position_name = #{positionName},</if>
            <if test="positionType != null ">position_type = #{positionType},</if>
            <if test="area != null  and area != ''">area = #{area},</if>
            <if test="positionSalary != null ">position_salary = #{positionSalary},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where position_id = #{positionId}
    </update>

    <delete id="deleteJobPositionById" parameterType="Long">
        delete from job_position where position_id = #{positionId}
    </delete>

    <delete id="deleteJobPositionByIds" parameterType="String">
        delete from job_position where position_id in 
        <foreach item="positionId" collection="array" open="(" separator="," close=")">
            #{positionId}
        </foreach>
    </delete>

    <select id="selectJobPositionResumeList" parameterType="com.parttime.project.job.position.vo.DeliveryDetailVO" resultType="com.parttime.project.job.position.vo.DeliveryDetailVO">
    SELECT a.receive_id receiveId,a.operate_status operateStatus,a.operate_result operateResult,a.receive_time receiveTime,b.birthday,b.resume_id resumeId,b.resume_name resumeName,c.user_name userName FROM
	job_receive_detail a JOIN job_resume b ON a.resume_id = b.resume_id JOIN sys_user c ON b.user_id = c.user_id
        <where>
            <if test="positionId != null">
                and a.position_id = #{positionId}
            </if>
            <if test="userName != null and userName != ''">
                and c.user_name like concat('%', #{userName} '%')
            </if>
            <if test="operateStatus != null">
                and a.operate_status = #{operateStatus}
            </if>
        </where>

	ORDER BY
	a.receive_time DESC
    </select>

    <select id="selectPositionAndCounts" resultType="com.parttime.project.system.dashboard.domain.IndustryDto">
        SELECT position_name as name,COUNT(position_name) as count
        FROM `job_position`
        GROUP BY position_name
        ORDER BY count desc
        limit 6;
    </select>

    <select id="selectPositionSalary" resultType="com.parttime.project.system.dashboard.domain.PositionDto">
        select position_name as name,position_salary as salary
        from job_position
        order by create_time desc
        limit 20;
    </select>
</mapper>